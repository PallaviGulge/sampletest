package com.SwagLabs.TestPage;


import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Reporter;
import org.testng.annotations.*;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeTest;

import com.SwagLabs.Pages.AddToCartPage;
import com.SwagLabs.Pages.CheckoutPage;
import com.SwagLabs.Pages.InventoryPage;
import com.SwagLabs.Pages.LoginPage;
import com.SwagLabs.Pages.OverviewPage;
import com.SwagLabs.Utility.PropertiesUtil;
import com.SwagLabs.Utility.Utility;
import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;


public class BaseClass {
	
	public WebDriver driver; 
	public LoginPage lp;
	public InventoryPage ip;
	public AddToCartPage ap;
	public CheckoutPage cp;
	public OverviewPage op;
	public PropertiesUtil ps;
	public  ExtentReports extent;
	public ExtentSparkReporter spark;
	public ExtentTest test;
	
	
	//Code To generate report automatically
	
	@BeforeSuite
	public void reportSetUp()
	{
		//create instance of extent reports class
		 extent=new ExtentReports();
		  
		  //path for report
		  spark = new ExtentSparkReporter("Reports/SwagLabs.html");
		  
		  //configuration for report
		  spark.config().setReportName("SwagLabs_AutomationReport");
		  spark.config().setDocumentTitle("Sprint1 report");
		  spark.config().setTheme(Theme.DARK);
		  
		    
		  //attached the report
		  extent.attachReporter(spark);
		  
		  //create a test
		   test=extent.createTest("SwagLabTest");
	}
	
	
	@BeforeTest
	public void browserSetUp()
	{
		driver=new ChromeDriver();
		Reporter.log("Log:WebDriver session is created");
		test.pass("Driver session is created!");
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		driver.get("https://www.saucedemo.com/");
		/*
		 * Reporter :This class is used for test methods to log messages that will be included in the HTML
		 *  reportsgenerated by TestNG.
		 *  
		 *   log:Log the passed string to the HTML reports. If logToStandardOut is true, the string will also 
		 *   be printed on standard out
		 */
		Reporter.log("Log:Swaglabs application open!",true);
		test.pass("Swaglabs application open!");
		
		ps=new PropertiesUtil();//indepndent class 
		lp=new LoginPage(driver);//object of class to call class we created constructor of it
		ip=new InventoryPage(driver);
		ap=new AddToCartPage(driver);
		cp=new CheckoutPage(driver);
		op=new OverviewPage(driver);
	}
	
	@BeforeClass
	public void pageSetUp()// we canot jump to any page we need to go through the previous steps 
	{
		System.out.println("********Login Functionality**********");
		System.out.println("Application Title is :"+lp.getAppTitle());
		System.out.println("Application Url :"+lp.getAppurl());
		lp.doLogin(ps.getData("un"),ps.getData("psw"));
		Reporter.log("Log:User Login is completed!",true);
		test.pass("User Login is completed!");//Logs an event Status.PASS with details
	    Utility.getScreenshot(driver);

		
		System.out.println("*********Inventory Page************");
		System.out.println("Total Product count"+ip.getproductCount());
		pause();
		Reporter.log("Log:Total Product count is calculated !",true);
		test.pass("Total Product count is calculated !");
		ip.getPtoductLables();
		ip.addProductToCart(ps.getData("pname"));
		Reporter.log("Log:Product added into cart",true);
		test.pass("Product added into cart");
		pause();
	    Utility.getScreenshot(driver);

		
		System.out.println("********Add To Card Page*********");
		ap.openCartPage();
	    Utility.getScreenshot(driver);

		ap.doCheckout();
	    Utility.getScreenshot(driver);
	    test.pass("Check out is completed");

		
		System.out.println("**********Checkout Page**********");
		cp.doContinue(ps.getData("fname"),ps.getData("lname"),ps.getData("zipcode"));
	    Utility.getScreenshot(driver);

		
		System.out.println("***********Overview Page**********");
		Reporter.log("Log:Order completed!",true);
		test.pass("Order Placed !");
		
		
		
	}
	
	public void pause()//instead of using static wait at we created method so its not required to throws an interrupted exception for each command
	{
		try {
			Thread.sleep(2000);
		}
		catch(InterruptedException e)
		{
			e.printStackTrace();
		}
	}
	
	@AfterTest
	public void tearDown()
	{
		driver.quit();
	}
	
	//Writes test information from the started reporters to their output view
	@AfterSuite
	public void exitReport()
	{
		extent.flush();
	}

}
